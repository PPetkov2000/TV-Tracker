{"version":3,"file":"static/js/769.40a0f091.chunk.js","mappings":"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","sources":["components/Message.js","components/CastCredits.js","pages/PersonInfo.js","services/api/TVMazeApi.js","utils/defaultImage.js"],"sourcesContent":["import React from \"react\";\n\nconst Message = ({ variant, children }) => {\n  return <h3 className={`alert-${variant}`}>{children}</h3>;\n};\n\nexport default Message;\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { defaultImage } from '../utils/defaultImage'\r\n\r\nconst CastCredits = ({ shows }) => {\r\n  return (\r\n    <section className=\"cast-credits\">\r\n      <div className=\"content-wrapper\">\r\n        <h2 className=\"cast-credits__title\">Cast Credits</h2>\r\n        <ul className=\"cast-credits__list\">\r\n          {shows.map((show) => (\r\n            <li key={show.id} className=\"cast-credits__list-item\">\r\n              <img src={show.image ? show.image.medium : defaultImage} alt={show.name} className=\"cast-credits__list-item-image\" loading=\"lazy\" />\r\n              <p className=\"cast-credits__list-item-text\">\r\n                <Link to={`/shows/${show.id}`} className=\"cast-credits__list-item-link\">\r\n                  {show.name}\r\n                </Link>\r\n              </p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default CastCredits\r\n","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useQuery } from 'react-query'\r\nimport CastCredits from '../components/CastCredits'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { defaultImage } from '../utils/defaultImage'\r\nimport TVMazeApi from '../services/api/TVMazeApi'\r\n\r\nconst PersonInfo = () => {\r\n  const params = useParams()\r\n  const personDetailsQuery = useQuery({\r\n    queryKey: ['persons', params.id],\r\n    queryFn: () => TVMazeApi.getPersonDetails(params.id),\r\n    retry: 5,\r\n    enabled: !!params.id,\r\n  })\r\n  const castCreditsQuery = useQuery({\r\n    queryKey: ['persons', params.id],\r\n    queryFn: () => TVMazeApi.getCastCredits(params.id),\r\n    retry: 5,\r\n    enabled: !!params.id,\r\n  })\r\n  const person = personDetailsQuery?.data?.data\r\n  const castCredits = castCreditsQuery?.data?.data\r\n  const personShows = castCredits?.map((x) => x._embedded.show)\r\n\r\n  return personDetailsQuery.isLoading ? (\r\n    <Loader />\r\n  ) : personDetailsQuery.isError ? (\r\n    <Message variant=\"red\">{personDetailsQuery.error.message}</Message>\r\n  ) : (\r\n    <>\r\n      <section className=\"person-info\">\r\n        <div className=\"content-wrapper\">\r\n          <img src={person.image ? person.image.medium : defaultImage} alt={person.name} className=\"person-info__image\" loading=\"lazy\" />\r\n          <article className=\"person-info__about\">\r\n            <h2 className=\"person-info__about-title\">Person Info</h2>\r\n            <p className=\"person-info__about-text\">\r\n              <strong>Name:</strong> {person.name}\r\n            </p>\r\n            <p className=\"person-info__about-text\">\r\n              <strong>Gender:</strong> {person.gender}\r\n            </p>\r\n            <p className=\"person-info__about-text\">\r\n              <strong>Age:</strong> {new Date(Date.now()).toISOString().split('-')[0] - person.birthday.split('-')[0]}\r\n            </p>\r\n            <p className=\"person-info__about-text\">\r\n              <strong>Birthday:</strong> {person.birthday}\r\n            </p>\r\n            <p className=\"person-info__about-text\">\r\n              <strong>Born in:</strong> {person.country.name}\r\n            </p>\r\n          </article>\r\n        </div>\r\n      </section>\r\n      {personShows && <CastCredits shows={personShows} />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PersonInfo\r\n","import axios from 'axios'\r\n\r\nconst apiInstance = axios.create({\r\n  baseUrl: 'https://api.tvmaze.com',\r\n  headers: { 'Content-Type': 'application/json' },\r\n})\r\n\r\nconst baseUrl = 'https://api.tvmaze.com'\r\n\r\nconst endpoints = {\r\n  getShows() {\r\n    return apiInstance.get(`${baseUrl}/shows`)\r\n  },\r\n  getShowsByName(name = '') {\r\n    return apiInstance.get(`${baseUrl}/search/shows?q=${name}`)\r\n  },\r\n  getShowDetails(id) {\r\n    return apiInstance.get(`${baseUrl}/shows/${id}?embed[]=episodes&embed[]=cast`)\r\n  },\r\n  getEpisodeDetails(id) {\r\n    return apiInstance.get(`${baseUrl}/episodes/${id}?embed=show`)\r\n  },\r\n  getCharacterDetails(id) {\r\n    return apiInstance.get(`${baseUrl}/characters/${id}?embed=castcredits`)\r\n  },\r\n  getPersonDetails(id) {\r\n    return apiInstance.get(`${baseUrl}/people/${id}`)\r\n  },\r\n  getCastCredits(id) {\r\n    return apiInstance.get(`${baseUrl}/people/${id}/castcredits?embed=show`)\r\n  },\r\n}\r\n\r\nexport default endpoints\r\n","export const defaultImage = \"../images/no-image.jpg\";"],"names":["variant","children","className","shows","map","show","src","image","medium","defaultImage","alt","name","loading","to","id","params","useParams","personDetailsQuery","useQuery","queryKey","queryFn","TVMazeApi","retry","enabled","castCreditsQuery","person","data","castCredits","personShows","x","_embedded","isLoading","Loader","isError","Message","error","message","gender","Date","now","toISOString","split","birthday","country","apiInstance","axios","baseUrl","headers","endpoints","getShows","get","getShowsByName","getShowDetails","getEpisodeDetails","getCharacterDetails","getPersonDetails","getCastCredits"],"sourceRoot":""}