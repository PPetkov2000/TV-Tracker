{"version":3,"file":"static/js/416.bc3149c3.chunk.js","mappings":"8IAMA,IAJgB,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC1B,OAAO,eAAIC,UAAS,gBAAWF,GAAxB,SAAoCC,M,qHCkD7C,UA7CoB,WAAO,IAAD,EAClBE,GAASC,EAAAA,EAAAA,MACTC,GAAsBC,EAAAA,EAAAA,UAAS,CACnCC,SAAU,CAAC,UAAWJ,EAAOK,IAC7BC,QAAS,kBAAMC,EAAAA,EAAAA,kBAA4BP,EAAOK,KAClDG,MAAO,EACPC,UAAWT,EAAOK,KAEdK,EAAO,OAAGR,QAAH,IAAGA,GAAH,UAAGA,EAAqBS,YAAxB,aAAG,EAA2BA,KAE3C,OAAOT,EAAoBU,WACzB,SAAC,IAAD,IACEV,EAAoBW,SACtB,SAAC,IAAD,CAAShB,QAAQ,MAAjB,SAAwBK,EAAoBY,MAAMC,WAElD,oBAAShB,UAAU,eAAnB,UACE,iBAAKA,UAAU,kBAAf,WACE,4BACE,gBAAKiB,IAAKN,EAAQO,MAAQP,EAAQO,MAAMC,OAASC,EAAAA,EAAcC,IAAKV,EAAQW,KAAMtB,UAAU,sBAAsBuB,QAAQ,UAC1H,eAAIvB,UAAU,qBAAd,SAAoCW,EAAQW,WAE9C,qBAAStB,UAAU,sBAAnB,WACE,eAAIA,UAAU,4BAAd,2BACA,eAAGA,UAAU,2BAAb,WACE,sCAAuB,KACvB,SAAC,KAAD,CAAMwB,GAAE,iBAAYb,EAAQc,UAAUC,KAAKpB,IAAMN,UAAU,gCAA3D,SACGW,EAAQc,UAAUC,KAAKJ,WAG5B,eAAGtB,UAAU,2BAAb,WACE,wCADF,WACmCW,EAAQgB,OAD3C,aAC6DhB,EAAQiB,WAErE,eAAG5B,UAAU,2BAAb,WACE,yCADF,IAC6BW,EAAQkB,YAErC,eAAG7B,UAAU,2BAAb,WACE,yCADF,IAC6BW,EAAQmB,QADrC,WAGA,gBAAKC,wBAAyB,CAAEC,OAAQrB,EAAQsB,SAAWjC,UAAU,0C,mCC5CzEkC,E,MAAcC,GAAAA,OAAa,CAC/BC,QAAS,yBACTC,QAAS,CAAE,eAAgB,sBAGvBD,EAAU,yBAEVE,EAAY,CAChBC,SADgB,WAEd,OAAOL,EAAYM,IAAZ,UAAmBJ,EAAnB,YAETK,eAJgB,WAIW,IAAZnB,EAAW,uDAAJ,GACpB,OAAOY,EAAYM,IAAZ,UAAmBJ,EAAnB,2BAA6Cd,KAEtDoB,eAPgB,SAODpC,GACb,OAAO4B,EAAYM,IAAZ,UAAmBJ,EAAnB,kBAAoC9B,EAApC,oCAETqC,kBAVgB,SAUErC,GAChB,OAAO4B,EAAYM,IAAZ,UAAmBJ,EAAnB,qBAAuC9B,EAAvC,iBAETsC,oBAbgB,SAaItC,GAClB,OAAO4B,EAAYM,IAAZ,UAAmBJ,EAAnB,uBAAyC9B,EAAzC,wBAETuC,iBAhBgB,SAgBCvC,GACf,OAAO4B,EAAYM,IAAZ,UAAmBJ,EAAnB,mBAAqC9B,KAE9CwC,eAnBgB,SAmBDxC,GACb,OAAO4B,EAAYM,IAAZ,UAAmBJ,EAAnB,mBAAqC9B,EAArC,8BAIX,O,oDCjCO,IAAMc,EAAe","sources":["components/Message.js","pages/EpisodeInfo.js","services/api/TVMazeApi.js","utils/defaultImage.js"],"sourcesContent":["import React from \"react\";\n\nconst Message = ({ variant, children }) => {\n  return <h3 className={`alert-${variant}`}>{children}</h3>;\n};\n\nexport default Message;\n","import React from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { useQuery } from 'react-query'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { defaultImage } from '../utils/defaultImage'\r\nimport TVMazeApi from '../services/api/TVMazeApi'\r\n\r\nconst EpisodeInfo = () => {\r\n  const params = useParams()\r\n  const episodeDetailsQuery = useQuery({\r\n    queryKey: ['persons', params.id],\r\n    queryFn: () => TVMazeApi.getEpisodeDetails(params.id),\r\n    retry: 5,\r\n    enabled: !!params.id,\r\n  })\r\n  const episode = episodeDetailsQuery?.data?.data\r\n\r\n  return episodeDetailsQuery.isLoading ? (\r\n    <Loader />\r\n  ) : episodeDetailsQuery.isError ? (\r\n    <Message variant=\"red\">{episodeDetailsQuery.error.message}</Message>\r\n  ) : (\r\n    <section className=\"episode-info\">\r\n      <div className=\"content-wrapper\">\r\n        <div>\r\n          <img src={episode.image ? episode.image.medium : defaultImage} alt={episode.name} className=\"episode-info__image\" loading=\"lazy\" />\r\n          <h3 className=\"episode-info__name\">{episode.name}</h3>\r\n        </div>\r\n        <article className=\"episode-info__about\">\r\n          <h2 className=\"episode-info__about-title\">Episode Info</h2>\r\n          <p className=\"episode-info__about-text\">\r\n            <strong>Show:</strong>{' '}\r\n            <Link to={`/shows/${episode._embedded.show.id}`} className=\"episode-info__about-show-link\">\r\n              {episode._embedded.show.name}\r\n            </Link>\r\n          </p>\r\n          <p className=\"episode-info__about-text\">\r\n            <strong>Number:</strong> Season {episode.season}, Episode {episode.number}\r\n          </p>\r\n          <p className=\"episode-info__about-text\">\r\n            <strong>Airdate:</strong> {episode.airdate}\r\n          </p>\r\n          <p className=\"episode-info__about-text\">\r\n            <strong>Runtime:</strong> {episode.runtime} min\r\n          </p>\r\n          <div dangerouslySetInnerHTML={{ __html: episode.summary }} className=\"episode-info__about-summary\"></div>\r\n        </article>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default EpisodeInfo\r\n","import axios from 'axios'\r\n\r\nconst apiInstance = axios.create({\r\n  baseUrl: 'https://api.tvmaze.com',\r\n  headers: { 'Content-Type': 'application/json' },\r\n})\r\n\r\nconst baseUrl = 'https://api.tvmaze.com'\r\n\r\nconst endpoints = {\r\n  getShows() {\r\n    return apiInstance.get(`${baseUrl}/shows`)\r\n  },\r\n  getShowsByName(name = '') {\r\n    return apiInstance.get(`${baseUrl}/search/shows?q=${name}`)\r\n  },\r\n  getShowDetails(id) {\r\n    return apiInstance.get(`${baseUrl}/shows/${id}?embed[]=episodes&embed[]=cast`)\r\n  },\r\n  getEpisodeDetails(id) {\r\n    return apiInstance.get(`${baseUrl}/episodes/${id}?embed=show`)\r\n  },\r\n  getCharacterDetails(id) {\r\n    return apiInstance.get(`${baseUrl}/characters/${id}?embed=castcredits`)\r\n  },\r\n  getPersonDetails(id) {\r\n    return apiInstance.get(`${baseUrl}/people/${id}`)\r\n  },\r\n  getCastCredits(id) {\r\n    return apiInstance.get(`${baseUrl}/people/${id}/castcredits?embed=show`)\r\n  },\r\n}\r\n\r\nexport default endpoints\r\n","export const defaultImage = \"../images/no-image.jpg\";"],"names":["variant","children","className","params","useParams","episodeDetailsQuery","useQuery","queryKey","id","queryFn","TVMazeApi","retry","enabled","episode","data","isLoading","isError","error","message","src","image","medium","defaultImage","alt","name","loading","to","_embedded","show","season","number","airdate","runtime","dangerouslySetInnerHTML","__html","summary","apiInstance","axios","baseUrl","headers","endpoints","getShows","get","getShowsByName","getShowDetails","getEpisodeDetails","getCharacterDetails","getPersonDetails","getCastCredits"],"sourceRoot":""}